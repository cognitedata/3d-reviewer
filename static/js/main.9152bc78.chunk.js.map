{"version":3,"sources":["reducers/models.js","store/index.js","reducers/comments.js","reducers/revisions.js","constants/actionTypes.js","components/Comment.js","components/CommentSection.js","constants/events.js","actions/comments.js","selectors/comments.js","containers/CommentDrawer.js","containers/Model.js","components/ModelList.js","containers/Models.js","actions/models.js","components/RevisionCard.js","containers/Revisions.js","actions/revisions.js","containers/Auth.js","containers/Login.js","routes/index.js","utils/serviceWorker.js","index.js","reducers/index.js","store/storeProd.js"],"names":["Model","PropTypes","shape","id","number","isRequired","name","string","initialState","loading","bool","items","arrayOf","models","state","arguments","length","undefined","action","type","ActionTypes","FETCH_MODELS","Object","_home_travis_build_cognitedata_3d_reviewer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","SET_MODELS","payload","store","require","default","module","exports","Comment","author","content","datetime","comments","ADD_COMMENT","_action$payload","comment","nodeId","_home_travis_build_cognitedata_3d_reviewer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_cognitedata_3d_reviewer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","concat","_home_travis_build_cognitedata_3d_reviewer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","SET_COMMENTS","_action$payload2","FETCH_COMMENTS","Revision","thumbnailURL","revisions","FETCH_REVISIONS","SET_REVISIONS","__webpack_exports__","_ref","avatar","react_default","a","createElement","es_comment","toString","Mention","CommentSection","onComment","text","Fragment","list","header","itemLayout","dataSource","locale","emptyText","renderItem","item","components_Comment","actions","es_avatar","size","icon","mention","style","width","height","onChange","editorState","defaultSuggestions","multiLines","autoFocus","placeholder","es_button","block","top","onClick","MODEL_ID_FIELD","REVISION_ID_FIELD","NODE_ID_FIELD","addComment","selectComments","CommentDrawer","_this$props","_this","props","modelId","revisionId","onSubmitComment","fetchData","_this$props2","doFetchComments","this","prevProps","_this$props3","onClose","drawer","title","placement","closable","visible","mask","components_CommentSection","React","Component","connect","ownProps","dispatch","asyncToGenerator","regenerator_default","mark","_callee","_metadata","events","wrap","_context","prev","next","getState","abrupt","sdk","search","metadata","defineProperty","sort","dir","sent","map","event","description","Date","createdTime","toDateString","stop","_x","apply","_ref2","_callee2","_metadata2","_context2","create","source","_x2","model","onViewerReady","_","setState","match","onCommentsClose","history","push","url","deselectAllNodes","selectNode","Number","_this2","className","dist_index_es","onReady","Route","exact","path","render","params","containers_CommentDrawer","_ownProps$match$param","ModelList","Link","to","ModelsContainer","doFetchModels","components_ModelList","response","listModels","Meta","Card","RevisionCardWrapper","styled","_templateObject","RevisionCard","_useState","useState","_useState2","slicedToArray","dataUrl","setDataUrl","useEffect","canceled","responseType","then","data","URL","createObjectURL","catch","ex","console","error","cover","textAlign","alt","src","objectFit","RevisionsContainer","doFetchRevisions","spin","revision","components_RevisionCard","key","listRevisions","filter","status","fetchRevisions","revisionUrl","tenant","index_es","project","redirectUrl","window","location","href","errorRedirectUrl","usePopup","enableTokenCaching","Switch","Redirect","strict","from","component","Revisions","Models","Wrapper","div","Login_templateObject","TenantSelectorContainer","_templateObject2","onTenantSelected","createBrowserHistory","Routes","BrowserRouter","basename","Login","Auth","Boolean","hostname","es","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","rootReducer","combineReducers","__webpack_require__","d","configureStore","middlewares","ReduxThunk","enhancer","applyMiddleware","createStore"],"mappings":"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","file":"static/js/main.9152bc78.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport ActionTypes from '../constants/actionTypes'\n\nexport const Model = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n});\n\nexport const Models = PropTypes.shape({\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(Model).isRequired,\n});\n\n// nodeId -> { loading: boolean, items: array of models }\nconst initialState = {\n  loading: false,\n  items: [],\n}\n\nexport default function models(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.FETCH_MODELS: {\n      return {\n        ...state,\n        loading: true,\n        items: [],\n      }\n    }\n    case ActionTypes.SET_MODELS: {\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n","const { default: store } = process.env.NODE_ENV === 'production'\n  ? require('./storeProd')\n  : require('./storeDev')\n\n// Exporting the store, then use it anywhere like store.getState() or store.dispatch()\nmodule.exports = store()","import PropTypes from 'prop-types'\nimport ActionTypes from '../constants/actionTypes'\n\nexport const Comment = PropTypes.shape({\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  datetime: PropTypes.string.isRequired,\n});\n\nexport const Comments = PropTypes.shape({\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(Comment).isRequired,\n});\n\n// nodeId -> { loading: boolean, items: array of comments }\nconst initialState = {}\n\nexport default function comments(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENT: {\n      const { comment, nodeId } = action.payload;\n      return {\n        ...state,\n        [nodeId]: {\n          ...state[nodeId],\n          items: [\n            ...state[nodeId].items,\n            comment,\n          ],\n        },\n      }\n    }\n    case ActionTypes.SET_COMMENTS: {\n      const { items, nodeId } = action.payload;\n      return {\n        ...state,\n        [nodeId]: { loading: false, items },\n      }\n    }\n    case ActionTypes.FETCH_COMMENTS: {\n      const { nodeId } = action.payload;\n      return {\n        ...state,\n        [nodeId]: { loading: true, items: [] },\n      }\n    }\n    default:\n      return state\n  }\n}\n","import PropTypes from 'prop-types'\nimport ActionTypes from '../constants/actionTypes'\n\nexport const Revision = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  thumbnailURL: PropTypes.string.isRequired,\n});\n\nexport const Revisions = PropTypes.shape({\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(Revision).isRequired,\n});\n\n// nodeId -> { loading: boolean, items: array of revisions }\nconst initialState = {\n  loading: false,\n  items: [],\n}\n\nexport default function revisions(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.FETCH_REVISIONS: {\n      return {\n        ...state,\n        loading: true,\n        items: [],\n      }\n    }\n    case ActionTypes.SET_REVISIONS: {\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n","export default {\n  SET_COMMENTS: 'SET_COMMENTS',\n  ADD_COMMENT: 'ADD_COMMENT',\n  FETCH_COMMENTS: 'FETCH_COMMENTS',\n\n  // models\n  FETCH_MODELS: 'FETCH_MODELS',\n  SET_MODELS: 'SET_MODELS',\n\n  // revisions\n  FETCH_REVISIONS: 'FETCH_REVISIONS',\n  SET_REVISIONS: 'SET_REVISIONS',\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Comment as AntDComment } from 'antd';\n\nfunction Comment({ author, avatar, content, datetime }) {\n  return (\n    <AntDComment\n      author={author}\n      avatar={avatar}\n      content={content}\n      datetime={datetime}\n    />\n  )\n}\n\nComment.propTypes = {\n  author: PropTypes.string.isRequired,\n  avatar: PropTypes.node.isRequired,\n  content: PropTypes.string.isRequired,\n  datetime: PropTypes.string.isRequired,\n}\n\nexport default Comment\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Mention, List, Button, Avatar } from 'antd'\nimport Comment from './Comment'\n\nconst { toString } = Mention;\n\nfunction CommentSection({ loading, comments, onComment }) {\n  let text = '';\n  const onChange = (editorState) => {\n    text = toString(editorState);\n  }\n  const handleComment = () => {\n    onComment(text);\n  }\n\n  return (\n    <React.Fragment>\n      <List\n        header={`${comments.length} comment${comments.length > 1 ? 's' : ''}`}\n        itemLayout=\"horizontal\"\n        dataSource={comments}\n        loading={loading}\n        locale={{emptyText: 'No comments'}}\n        renderItem={item => (\n          <li>\n            <Comment\n              actions={item.actions}\n              author={item.author}\n              avatar={<Avatar size=\"large\" icon=\"user\" />}\n              content={item.content}\n              datetime={item.datetime}\n            />\n          </li>\n        )}\n      />\n      {loading ||\n        <>\n          <Mention\n            style={{ width: '100%', height: 100 }}\n            onChange={onChange}\n            defaultSuggestions={['Fredrik Anfinsen', 'Anders Hafreager']}\n            multiLines\n            autoFocus\n            placeholder=\"Type in a new comment here\"\n          />\n          <Button type=\"primary\" block style={{ top: 10 }} onClick={handleComment}>\n            Comment\n          </Button>\n        </>\n      }\n    </React.Fragment>\n  )\n}\n\nCommentSection.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    author: PropTypes.string.isRequired,\n  })).isRequired,\n  onComment: PropTypes.func.isRequired,\n}\n\nexport default CommentSection\n","export const MODEL_ID_FIELD = '3D_MODEL_ID';\nexport const REVISION_ID_FIELD = '3D_REVISION_ID';\nexport const NODE_ID_FIELD = '3D_NODE_ID';","import * as sdk from '@cognite/sdk'\nimport ActionTypes from '../constants/actionTypes'\nimport store from '../store'\nimport { MODEL_ID_FIELD, REVISION_ID_FIELD, NODE_ID_FIELD } from '../constants/events'\n\nexport const addComment = (nodeId, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: { nodeId, comment },\n})\n\nexport function fetchComments(modelId, revisionId, nodeId) {\n  return async (dispatch) => {\n    if (store.getState().comments[nodeId] !== undefined) {\n      return;\n    }\n    dispatch({ type: ActionTypes.FETCH_COMMENTS, payload: nodeId })\n    const events = await sdk.Events.search({\n      metadata: {\n        [MODEL_ID_FIELD]: modelId,\n        [REVISION_ID_FIELD]: revisionId,\n        [NODE_ID_FIELD]: nodeId,\n      },\n      sort: 'createdTime',\n      dir: 'asc',\n    });\n    const comments = events.items.map(event => ({\n      author: event.metadata.author,\n      content: event.description,\n      datetime: new Date(event.createdTime).toDateString(),\n    }));\n    dispatch({ type: ActionTypes.SET_COMMENTS, payload: { nodeId, items: comments } })\n  }\n}\n\nexport function submitComment(modelId, revisionId, nodeId, comment) {\n  return async (dispatch) => {\n    const { author, content } = comment;\n    const metadata = {\n      author,\n      [MODEL_ID_FIELD]: modelId,\n      [REVISION_ID_FIELD]: revisionId,\n      [NODE_ID_FIELD]: nodeId,\n    };\n    await sdk.Events.create([{\n      description: content,\n      source: '3d-reviewer',\n      type: 'Comment',\n      metadata,\n    }]);\n    dispatch(addComment(nodeId, {\n      author: comment.author,\n      content: comment.content,\n      datetime: new Date().toDateString(),\n    }));\n  }\n}\n","export const selectComments = (state, nodeId) => state.comments[nodeId] || { items: [], loading: false }\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Drawer } from 'antd'\nimport CommentSection from '../components/CommentSection'\nimport { fetchComments, submitComment } from '../actions/comments'\nimport { Comments } from '../reducers/comments'\nimport { selectComments } from '../selectors/comments'\n\nclass CommentDrawer extends React.Component {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { nodeId } = this.props;\n    if (prevProps.nodeId !== nodeId) {\n      this.fetchData();\n    }\n  }\n\n  onComment = (content) => {\n    const { modelId, revisionId, nodeId, onSubmitComment } = this.props\n    onSubmitComment(modelId, revisionId, nodeId, {\n      content,\n      author: 'fredrik.anfinsen@cognite.com',\n    })\n  }\n\n  fetchData = () => {\n    const { modelId, revisionId, nodeId, doFetchComments } = this.props\n    doFetchComments(modelId, revisionId, nodeId)\n  }\n\n  render() {\n    const { comments, onClose } = this.props\n    return (\n      <Drawer title=\"Comments\" placement=\"right\" width={400} closable onClose={onClose} visible mask={false}>\n        <CommentSection loading={comments.loading} comments={comments.items} onComment={this.onComment} />\n      </Drawer>\n    )\n  }\n}\nCommentDrawer.propTypes = {\n  modelId: PropTypes.number.isRequired,\n  revisionId: PropTypes.number.isRequired,\n  nodeId: PropTypes.number.isRequired,\n  doFetchComments: PropTypes.func.isRequired,\n  onSubmitComment: PropTypes.func.isRequired,\n  comments: Comments.isRequired,\n  onClose: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { nodeId } = ownProps\n  return {\n    comments: selectComments(state, nodeId),\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  doFetchComments: (...args) => dispatch(fetchComments(...args)),\n  onSubmitComment: (...args) => dispatch(submitComment(...args)),\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CommentDrawer)\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { Model3DViewer } from '@cognite/gearbox';\nimport { Route } from 'react-router-dom'\nimport CommentDrawer from './CommentDrawer'\n\nclass Model extends React.Component {\n  state = {\n    model: null,\n  };\n\n  onViewerReady = (_, model) => {\n    this.setState({ model });\n  }\n\n  onClick = async (nodeId) => {\n    if (!nodeId) {\n      this.onCommentsClose();\n      return;\n    }\n    const { match, history } = this.props;\n    history.push(`${match.url}/comments/${nodeId}`); \n  }\n\n  onCommentsClose = () => {\n    const { model } = this.state;\n    const { match, history } = this.props;\n    model.deselectAllNodes();\n    history.push(match.url);\n  }\n\n  selectNode = nodeId => {\n    const { model } = this.state;\n    if (!model) return;\n    model.deselectAllNodes();\n    model.selectNode(Number(nodeId));\n  }\n\n  render() {\n    const { modelId, revisionId, match } = this.props;\n    return (\n      <div className=\"main-layout\" style={{ width: '100%', height: '100vh'}}>\n        <Model3DViewer\n          modelId={modelId}\n          revisionId={revisionId}\n          onClick={this.onClick}\n          onReady={this.onViewerReady}\n        />\n        <Route exact path={`${match.url}/comments/:nodeId`} render={props => {\n          const { nodeId } = props.match.params;\n          this.selectNode(Number(nodeId));\n          return (\n            <CommentDrawer\n              loading\n              modelId={modelId}\n              revisionId={revisionId}\n              nodeId={Number(nodeId)}\n              onClose={this.onCommentsClose}\n            />\n          );\n        }} />\n      </div>\n    );\n  }\n}\nModel.propTypes = {\n  modelId:  PropTypes.number.isRequired,\n  revisionId:  PropTypes.number.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n}\n\nconst mapStateToProps = (_, ownProps) => {\n  const { modelId, revisionId } = ownProps.match.params;\n  return {\n    modelId: Number(modelId),\n    revisionId: Number(revisionId),\n  }\n}\n\nexport default connect(mapStateToProps)(Model);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Icon } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { Model } from '../reducers/models'\n\nfunction ModelList({ loading, items }) {\n  return (\n    <List\n      header={`${items.length} model${items.length > 1 ? 's' : ''}`}\n      itemLayout=\"horizontal\"\n      dataSource={items}\n      loading={loading}\n      locale={{emptyText: 'No models. Please upload a 3D model first: https://doc.cognitedata.com/dev/guides/3d/upload-3d.html'}}\n      renderItem={item => (\n        <li>\n          <Link to={`models/${item.id}/revisions`}><Icon type=\"code-sandbox\" />{item.name}</Link>\n        </li>\n      )}\n    />\n  )\n}\n\nModelList.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(Model).isRequired,\n}\n\nexport default ModelList\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { fetchModels } from '../actions/models'\nimport { Models } from '../reducers/models'\nimport ModelList from '../components/ModelList'\n\nclass ModelsContainer extends React.Component {\n  componentDidMount() {\n    const { doFetchModels } = this.props;\n    doFetchModels();\n  }\n\n  render() {\n    const { models } = this.props\n    return (\n      <ModelList\n        loading={models.loading}\n        items={models.items}\n      />\n    )\n  }\n}\nModelsContainer.propTypes = {\n  models: Models.isRequired,\n  doFetchModels: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  models: state.models,\n});\nconst mapDispatchToProps = dispatch => ({\n  doFetchModels: () => dispatch(fetchModels()),\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModelsContainer)\n","import * as sdk from '@cognite/sdk'\nimport ActionTypes from '../constants/actionTypes'\n\nexport function fetchModels() {\n  return async (dispatch) => {\n    dispatch({ type: ActionTypes.FETCH_MODELS });\n    const response = await sdk.ThreeD.listModels();\n    const models = response.items.map(model => ({\n      name: model.name,\n      id: model.id,\n    }));\n    dispatch({ type: ActionTypes.SET_MODELS, payload: models })\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport * as sdk from '@cognite/sdk';\n\nconst { Meta } = Card;\n\nconst RevisionCardWrapper = styled(Card)`\n  width: 100%;\n  cursor: pointer;\n  padding: 16px !important;\n  background: none !important;\n  border: none !important;\n\n  .ant-card-body {\n    background: white;\n    border: 1px solid #e8e8e8 !important;\n    border-radius: 0 0 5px 5px;\n  }\n\n  @media screen and (min-width: 920px) {\n    width: 50%;\n  }\n\n  @media screen and (min-width: 1220px) {\n    width: 33%;\n  }\n\n  @media screen and (min-width: 1920px) {\n    width: 25%;\n  }\n`;\n\nconst RevisionCard = ({ thumbnailURL, revisionId }) => {\n  // We have to do this silly dance because the browser isn't authenticated to\n  // fetch the image, so we need to download the image and then serve it back\n  // to the <img /> tag via a `blob:garbage` URL.\n  // TODO(#2695): Remove this nonsense and just hand it the actual thumbnail.\n  const [dataUrl, setDataUrl] = useState('');\n\n  useEffect(\n    () => {\n      let canceled = false;\n      sdk\n        .rawGet(thumbnailURL, { responseType: 'blob' })\n        .then(response => {\n          if (!canceled) {\n            const { data } = response;\n            const url = URL.createObjectURL(data);\n            setDataUrl(url);\n          }\n        })\n        .catch(ex => {\n          console.error(ex);\n        });\n      return () => {\n        canceled = true;\n      };\n    },\n    [thumbnailURL]\n  );\n\n  return (\n    <RevisionCardWrapper\n      cover={\n        <Link\n          to={`revisions/${revisionId}`}\n          style={{ textAlign: 'center' }}\n        >\n          <img\n            alt=\"Single revision\"\n            src={dataUrl}\n            style={{\n              height: 225,\n              objectFit: 'cover',\n              width: '100%',\n            }}\n          />\n        </Link>\n      }\n    >\n      <Link to={`revisions/${revisionId}`}>\n        <Meta\n          title=\"Revision\"\n          description=\"Click to view\"\n        />\n      </Link>\n    </RevisionCardWrapper>\n  );\n};\n\nRevisionCard.propTypes = {\n  thumbnailURL: PropTypes.string.isRequired,\n  revisionId: PropTypes.number.isRequired,\n};\n\nexport default RevisionCard;","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Spin } from 'antd';\nimport { Revisions } from '../reducers/revisions'\nimport RevisionCard from '../components/RevisionCard'\nimport { fetchRevisions } from '../actions/revisions';\n\nclass RevisionsContainer extends React.Component {\n  componentDidMount() {\n    const { doFetchRevisions, match } = this.props;\n    doFetchRevisions(Number(match.params.modelId));\n  }\n\n  render() {\n    const { revisions } = this.props\n    if (revisions.loading) {\n      return (<Spin size=\"large\" />);\n    }\n    return (\n      <>\n        {revisions.items.map(revision => (\n          <RevisionCard\n            key={revision.id}\n            revisionId={revision.id}\n            thumbnailURL={revision.thumbnailURL}\n          />\n        ))}\n      </>\n    )\n  }\n}\nRevisionsContainer.propTypes = {\n  revisions: Revisions.isRequired,\n  doFetchRevisions: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      modelId: PropTypes.string.isRequired,\n    }).isRequired\n  }).isRequired,\n}\n\nconst mapStateToProps = state => ({\n  revisions: state.revisions,\n});\nconst mapDispatchToProps = dispatch => ({\n  doFetchRevisions: modelId => dispatch(fetchRevisions(modelId)),\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RevisionsContainer)\n","import * as sdk from '@cognite/sdk'\nimport ActionTypes from '../constants/actionTypes'\n\nexport function fetchRevisions(modelId) {\n  return async (dispatch) => {\n    dispatch({ type: ActionTypes.FETCH_REVISIONS, payload: modelId });\n    const response = await sdk.ThreeD.listRevisions(modelId);\n    const revisions = response.items.filter(revision => revision.status === 'Done').map(revision => ({\n      id: revision.id,\n      thumbnailURL: revision.thumbnailURL,\n    }));\n    dispatch({ type: ActionTypes.SET_REVISIONS, payload: revisions })\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { ReactAuthProvider } from '@cognite/react-auth';\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport Model from './Model'\nimport Models from './Models'\nimport Revisions from './Revisions'\n\nconst revisionUrl = `models/:modelId/revisions/:revisionId`;\nconst Auth = ({ tenant, match }) => (\n  <ReactAuthProvider \n    project={tenant}\n    redirectUrl={window.location.href}\n    errorRedirectUrl={window.location.href}\n    usePopup\n    enableTokenCaching\n  >\n    <Switch>\n      <Redirect exact strict from={`${match.url}/${revisionUrl}/`} to={`${match.url}/${revisionUrl}`} />\n      <Route path={`${match.url}/models/:modelId/revisions/:revisionId`} component={Model} />\n      <Route path={`${match.url}/models/:modelId/revisions`} component={Revisions} />\n      <Route path={`${match.url}/models`} component={Models} />\n    </Switch>\n   </ReactAuthProvider>\n)\nAuth.propTypes = {\n  tenant:  PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nconst mapStateToProps = (_, ownProps) => {\n  const { tenant } = ownProps.match.params;\n  return { tenant }\n}\n\nexport default connect(mapStateToProps)(Auth);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { TenantSelector } from '@cognite/gearbox'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst TenantSelectorContainer = styled.div`\n  max-width: 600px;\n  min-width: 400px;\n  align-self: center;\n`;\n\nconst Login = ({ onTenantSelected }) => (\n  <Wrapper>\n    <TenantSelectorContainer>\n      <TenantSelector\n        title=\"3D Reviewer\"\n        onTenantSelected={onTenantSelected}\n        placeholder=\"itera-dev\"\n      />\n    </TenantSelectorContainer>\n  </Wrapper>\n)\nLogin.propTypes = {\n  onTenantSelected:  PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (_, ownProps) => {\n  const onTenantSelected = (tenant) => {\n    ownProps.history.push(`/${tenant}/models`);\n  }\n  return { onTenantSelected };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport Auth from '../containers/Auth'\nimport Login from '../containers/Login'\n\nexport const history = createBrowserHistory()\n\nfunction Routes() {\n  return (\n    <Router basename=\"/3d-reviewer\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/:tenant\" component={Auth} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Routes from './routes'\nimport 'antd/dist/antd.css';\nimport './styles/globalStyles.css'\nimport * as serviceWorker from './utils/serviceWorker'\n\nrender(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root'),\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { combineReducers } from 'redux'\nimport comments from './comments'\nimport models from './models'\nimport revisions from './revisions'\n\nconst rootReducer = combineReducers({\n  comments,\n  models,\n  revisions,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nconst middlewares = [ReduxThunk]\nconst enhancer = [applyMiddleware(...middlewares)]\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, ...enhancer)\n}\n"],"sourceRoot":""}